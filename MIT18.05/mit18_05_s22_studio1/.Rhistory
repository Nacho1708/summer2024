clear
clear
2+3
2*3
2/3
2^3
x = 3^2
print(x)
x <- 3
y <- 5
v = c(1.1, 0, 3, 'c')
print(v)
l = 1:10
l = 1:100
print(l)
l = l + 3
print(l)
a = 3
a = c(1,2,3)
b = c(4,5,6)
c = a^b
print(l[1:50])
print(l^a)
sin(3)
sin(pi/4)
sin(90)
sin(pi/2)
mean(l)
z = matrix(l, nrow=2, ncol=50)
print(z)
x = 1:10
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
sample(x, 3, replace=TRUE)
y = c(1,2,3)
y = c(1:10)
dice = sample(1:6, 10, replace=TRUE)
rolls = matrix(dice, nrow=5, ncol=2)
rolls
rolls == TRUE
print(rolls<3)
sum(rolls==TRUE)
sum(rolls<3)
sum(rolls==6)
sim1 = sample(dice, 1000, replace=TRUE)
sum(if(sim==6))
sum(sim==6)
sum(sim1==6)
288/100
288/1000
1/6
sim1 = sample(dice, 10000, replace=TRUE)
sum(sim==6)
sum(sim1==6)
3030/10000
1.6
1/6
dice = 1:6
sim2 = sample(dice, 10000, replace=TRUE)
sum(sum2 == TRUE)
sum(sim2 == TRUE)
1729/10000
sim2 = sample(dice, 100000, replace=TRUE)
sum(sim2==TRUE)
16755/100000
1/6
#HELLO
dim(rolls)
z
a
dim(a)
ntrials=10000
matrix()
ntrials=10000
dice = 1:6
rolls = matrix(sample(dice, 4*15, replace = TRUE), nrows=4, ncolumns=15)
rolls = matrix(sample(dice, 4*15, replace = TRUE), nrow=4, ncolumn=15)
prob=mean(colSums(rolls))
prob=mean(colSums(rolls))
rolls = matrix(sample(dice, 4*15, replace = TRUE), nrow=4, ncol=15)
prob=mean(colSums(rolls))
print(prob)
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
print(prob)
print(prob)
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
mean(colSums(rolls==6))
print(prob)
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
source("~/chido.R")
dice = 1:6
sample(dice, 1000, replace=TRUE)
sample(dice, 1000, replace=TRUE)
sim1 = matrix(sample(dice, 2*500, replace=TRUE), nrow=2, ncol=500)
sim1
result = sumCol(sim1) == 12
result = colSums(sim1) == 12
result
result = sums(colSums(sim1) == 12)/500
result = sum(colSums(sim1) == 12)/500
result
sim1 = matrix(sample(dice, 2*1000, replace=TRUE), nrow=2, ncol=1000)
result = sum(colSums(sim1) == 12)/1000
result
colSums
sum(colSums(sim1)==12)
sum(colSums(sim1)==12)
sim1
setwd("~/summer_2024/MIT18.05/mit18_05_s22_studio1")
source("~/summer_2024/MIT18.05/mit18_05_s22_studio1/mit18_05_s22_studio1-start-here.r")
# factorial does what it says
x = factorial(3)
# factorial does what it says
x = factorial(3)
# factorial does what it says
x = factorial(3)
# factorial does what it says
x = factorial(3)
source("~/summer_2024/MIT18.05/mit18_05_s22_studio1/mit18_05_s22_studio1-samplecode.r")
source("~/summer_2024/MIT18.05/mit18_05_s22_studio1/mit18_05_s22_studio1-samplecode.r")
source("~/summer_2024/MIT18.05/mit18_05_s22_studio1/mit18_05_s22_studio1-samplecode.r")
x = sample(1:5, 5, replace=TRUE)
print(x)
x = sample(1:5, 5, replace=TRUE)
print(x)
x = sample(1:5, 5, replace=TRUE)
print(x)
x = sample(1:5, 5, replace=TRUE)
print(x)
x = sample(1:5, 5, replace=TRUE)
print(x)
x = matrix(1:30, nrow=5) #If you only set nrow, matrix will figure out ncol
print(x)
list_days = 1:ndays_in_year
studio1_problem_2a = function(ndays_in_year, npeople, ntrials) {
cat("----------------------------------\n")
cat("Problem 2a: Birthdays\n")
source('mit18_05_s22_colMatches.r')
estimated_prob = 0 # This variable is for your simulated probability
# Do not change the above code.
# ********* YOUR CODE BELOW HERE ***********
list_days = 1:ndays_in_year
results = sample(list_days, npeople*ntrials, replace = TRUE)
results = matrix(results, nrow=npeople)
#Now we will see if any coincide
print(results)
# These lines print out your answers
cat('Problem 2a simulation results:','\n')
cat('  Number of days in year =', ndays_in_year, '\n')
cat('  Number of people =', npeople, '\n')
cat('  Number of trials =', ntrials, '\n')
cat('  Simulated probability of a match =', estimated_prob, '\n')
}
studio1_problem_2a(365, 30, 20)
